carn_sex_interaction = {
	category = interaction_category_friendly
	desc = carn_sex_interaction_desc
	interface_priority = 40
	icon = carn_icon

	redirect = {
		scope:recipient = {
			save_scope_as = secondary_recipient
		}
	}

	populate_recipient_list = {
		scope:recipient = {
			add_to_list = characters
		}
		scope:actor = {
			if = {
				limit = {
					carnx_can_do_orgy_trigger = yes
				}
				every_courtier = {
					limit = {
						NOT = { this = scope:recipient }
						carnx_is_eligible_sex_secondary_target_trigger = { PLAYER = scope:actor }
					}
					add_to_list = characters
				}
			}
		}
	}

	is_shown = {
		NOR = {
			has_game_rule = carn_sex_interaction_disabled
			scope:actor = scope:recipient
		}
		scope:actor = {
			is_adult = yes
			carnx_is_sex_interaction_blocked_trigger = no
		}
		scope:recipient = {
			is_adult = yes
			carnx_is_sex_interaction_blocked_trigger = no
		}
		scope:actor = {
			carnx_can_have_sex_with_trigger = { PARTNER = scope:recipient }
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			carn_can_have_sex_trigger = yes
		}
		scope:recipient = {
			carn_can_have_sex_trigger = yes
			custom_tooltip = {
				text = "carnx_sex_target_too_far_away"
				carnx_is_sex_target_at_valid_location_trigger = { PARTNER = scope:actor }
			}
		}

		# If the recipient is a prostitute, check if actor has enough gold
		trigger_if = {
			limit = {
				scope:actor = {
					carnx_should_pay_prostitution_price_trigger = { PARTNER = scope:recipient }
				}
			}
			scope:actor.gold >= scope:recipient.carn_prostitute_sex_interaction_price_value
		}
	}

	cooldown = { months = carn_sex_interaction_cooldown }

	# Orgy
	send_option = {
		is_shown = {
			scope:actor = {
				carnx_can_do_orgy_trigger = yes
				custom_tooltip = {
					text = "carnx_has_eligible_sex_secondary_target_tt"
					any_courtier = {
						NOT = { this = scope:recipient }
						carnx_is_eligible_sex_secondary_target_trigger = { PLAYER = scope:actor }
					}
				}
			}
		}
		is_valid = {
			custom_tooltip = {
				text = "carnx_secondary_target_same_as_primary_target_tt"
				NOT = { scope:recipient = scope:secondary_recipient }
			}
		}
		flag = orgy
		localization = "carnx_sex_orgy_option"
		current_description = {
			desc = "carnx_sex_orgy_option_desc"
		}
	}

	# BDSM
	send_option = {
		is_shown = {
			scope:actor = {
				carnx_can_do_bdsm_trigger = yes
			}
			scope:recipient = {
				carnx_is_eligible_bdsm_target_trigger = { PLAYER = scope:actor }
			}
		}
		is_valid = {
			custom_tooltip = {
				text = "carnx_secondary_target_not_eligible_bdsm_target_tt"
				OR = {
					NOT = { exists = scope:secondary_recipient }
					scope:recipient = scope:secondary_recipient
					scope:secondary_recipient = {
						carnx_is_eligible_bdsm_target_trigger = { PLAYER = scope:actor }
					}
				}
			}
		}
		flag = bdsm
		localization = "carnx_sex_bdsm_option"
		current_description = {
			desc = "carnx_sex_bdsm_option_desc"
		}
	}

	send_options_exclusive = no

	on_accept = {
		save_temporary_scope_value_as = { name = demand_sex value = no }
		scope:actor = {
			carnx_pay_prostitution_price_effect = yes
			carnx_sex_interaction_main_effect = yes

			hidden_effect = {
				carnx_sex_interaction_sex_scene_effect = yes
			}
		}
	}

	auto_accept = yes
}