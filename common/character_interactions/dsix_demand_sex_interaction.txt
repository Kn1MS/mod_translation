dsi_demand_sex_interaction = {
	category = interaction_category_friendly
	desc = carnx_demand_sex_interaction_desc
	interface_priority = 40
	icon = carn_icon

	redirect = {
		scope:recipient = {
			save_scope_as = secondary_recipient
		}
	}

	populate_recipient_list = {
		scope:recipient = {
			add_to_list = characters
		}
		scope:actor = {
			if = {
				limit = {
					carnx_can_do_orgy_trigger = yes
				}
				every_relation = {
					type = slave
					limit = {
						NOT = { this = scope:recipient }
						carnx_is_eligible_demand_sex_target_trigger = { PLAYER = scope:actor }
					}
					add_to_list = characters
				}
			}
		}
	}

	is_shown = {
		NOR = {
			has_game_rule = carn_sex_interaction_disabled
			has_game_rule = carn_content_consent_always
			scope:actor = scope:recipient
		}
		scope:actor = {
			is_adult = yes
			carnx_is_sex_interaction_blocked_trigger = no
		}
		scope:recipient = {
			is_adult = yes
			carnx_is_sex_interaction_blocked_trigger = no
		}
		scope:actor = {
			carnx_relationship_allows_demand_sex_trigger = { PARTNER = scope:recipient }
		}
	}

	is_valid_showing_failures_only = {
		scope:actor = {
			carn_can_have_sex_trigger = yes
			has_usable_hook = scope:recipient
		}
		scope:recipient = {
			carn_can_have_sex_trigger = yes
			custom_tooltip = {
				text = "carnx_sex_target_too_far_away"
				carnx_is_sex_target_at_valid_location_trigger = { PARTNER = scope:actor }
			}
		}
	}

	cooldown = { months = carn_sex_interaction_cooldown }

	# Orgy
	send_option = {
		is_shown = {
			scope:actor = {
				carnx_can_do_orgy_trigger = yes
				custom_tooltip = {
					text = "carnx_has_eligible_demand_sex_secondary_target_tt"
					any_relation = {
						type = slave
						NOT = { this = scope:recipient }
						carnx_is_eligible_demand_sex_target_trigger = { PLAYER = scope:actor }
					}
				}
			}
		}
		is_valid = {
			custom_tooltip = {
				text = "carnx_secondary_target_same_as_primary_target_tt"
				NOT = { scope:recipient = scope:secondary_recipient }
			}
		}
		flag = orgy
		localization = "carnx_sex_orgy_option"
		current_description = {
			desc = "carnx_sex_orgy_option_desc"
		}
	}

	# BDSM
	send_option = {
		is_shown = {
			scope:actor = {
				carnx_can_do_bdsm_trigger = yes
			}
			scope:recipient = {
				carnx_is_eligible_bdsm_target_trigger = { PLAYER = scope:actor }
			}
		}
		is_valid = {
			custom_tooltip = {
				text = "carnx_secondary_target_not_eligible_bdsm_target_tt"
				OR = {
					NOT = { exists = scope:secondary_recipient }
					scope:recipient = scope:secondary_recipient
					scope:secondary_recipient = {
						carnx_is_eligible_bdsm_target_trigger = { PLAYER = scope:actor }
					}
				}
			}
		}
		flag = bdsm
		localization = "carnx_sex_bdsm_option"
		current_description = {
			desc = "carnx_sex_bdsm_option_desc"
		}
	}

	send_options_exclusive = no

	on_accept = {
		scope:actor = {
			# Use the hook on the recipient
			if = {
				limit = {
					has_usable_hook = scope:recipient
					trigger_if = {
						limit = { has_game_rule = carnx_sex_demand_sex_consumes_slave_hooks_disabled }
						NOT = { has_relation_slave = scope:recipient }
					}
				}
				use_hook = scope:recipient
			}

			# Use the hook on the secondary recipient
			if = {
				limit = { scope:orgy = yes }
				if = {
					limit = {
						has_usable_hook = scope:secondary_recipient
						trigger_if = {
							limit = { has_game_rule = carnx_sex_demand_sex_consumes_slave_hooks_disabled }
							NOT = { has_relation_slave = scope:secondary_recipient }
						}
					}
					use_hook = scope:secondary_recipient
				}
			}

			# If not on cooldown, show the effect and add the cooldown flag
			if = {
				limit = {
					NOT = { has_character_flag = carn_sex_interaction_effect_cd }
				}

				show_as_tooltip = {
					carn_had_sex_with_effect = {
						CHARACTER_1 = scope:actor
						CHARACTER_2 = scope:recipient
						C1_PREGNANCY_CHANCE = pregnancy_chance
						C2_PREGNANCY_CHANCE = pregnancy_chance
						STRESS_EFFECTS = no
						DRAMA = yes
					}
				}

				if = {
					limit = { scope:orgy = yes }
					show_as_tooltip = {
						carn_had_sex_with_effect = {
							CHARACTER_1 = scope:actor
							CHARACTER_2 = scope:secondary_recipient
							C1_PREGNANCY_CHANCE = pregnancy_chance
							C2_PREGNANCY_CHANCE = pregnancy_chance
							STRESS_EFFECTS = no
							DRAMA = yes
						}
					}
				}

				# Piety impact
				carnx_sex_interaction_piety_impact_effect = { PARTNER = scope:recipient }

				# Lose stress if arousal stress is enabled
				if = {
					limit = {
						has_game_rule = carn_arousal_stress_enabled
						is_attracted_to_gender_of = scope:recipient
						NOT = { has_trait = chaste }
					}
					add_stress = carnx_sex_interaction_stress_loss_value
				}

				# Stress impact
				carnx_sex_interaction_stress_impact_effect = { PARTNER = scope:recipient }

				# Additional stress impact of demanding sex
				stress_impact = {
					compassionate = miniscule_stress_impact_gain
					sadistic = miniscule_stress_impact_loss
					callous = miniscule_stress_impact_loss
					# TODO More traits causing stress impact?
				}

				# Additional piety and stress impact for BDSM
				if = {
					limit = { scope:bdsm = yes }
					carnx_sex_interaction_bdsm_player_effect = { PARTNER = scope:recipient }
				}

				# Other impact
				carnx_sex_interaction_other_impact_effect = { PARTNER = scope:recipient }

				# Effects for recipient
				scope:recipient = {
					# Stress impact
					carnx_sex_interaction_stress_impact_effect = { PARTNER = scope:actor }

					# Opinion effects of being demanded sex
					carnx_demand_sex_interaction_opinion_impact_effect = { PARTNER = scope:actor }

					# Additional stress and opinion impact for BDSM
					if = {
						limit = { scope:bdsm = yes }
						carnx_sex_interaction_bdsm_target_effect = { PARTNER = scope:actor }
					}

					# Other impact
					carnx_sex_interaction_other_impact_effect = { PARTNER = scope:actor }
				}

				# Effects for secondary recipient
				if = {
					limit = { scope:orgy = yes }
					scope:secondary_recipient = {
						# Stress impact
						carnx_sex_interaction_stress_impact_effect = { PARTNER = scope:actor }

						# Opinion effects of being demanded sex
						carnx_demand_sex_interaction_opinion_impact_effect = { PARTNER = scope:actor }

						# Additional stress and opinion impact for BDSM
						if = {
							limit = { scope:bdsm = yes }
							carnx_sex_interaction_bdsm_target_effect = { PARTNER = scope:actor }
						}
					}

					# Other impact
					carnx_sex_interaction_other_impact_effect = { PARTNER = scope:actor }
				}

				add_character_flag = {
					flag = carn_sex_interaction_effect_cd
					months = carn_sex_interaction_cooldown_base
				}
			}
			else = {
				custom_tooltip = carn_sex_interaction_effect_cd_tt
				add_character_flag = carn_block_next_had_sex_with_effect
			}

			hidden_effect = {
				# Request sex scene flags
				carnx_request_sex_scene_flags_effect = { TARGET = scope:recipient }

				# Request sex scene locations
				carnx_request_sex_scene_locations_effect = { TARGET = scope:recipient }

				# Actually fire the sex scene
				if = {
					limit = { scope:orgy = yes }
					carnx_sex_scene_effect = {
						PLAYER = scope:actor
						TARGET = scope:recipient
						TARGET2 = scope:secondary_recipient
						STRESS_EFFECTS = no
						DRAMA = yes
					}
				}
				else = {
					carn_sex_scene_effect = {
						PLAYER = scope:actor
						TARGET = scope:recipient
						STRESS_EFFECTS = no
						DRAMA = yes
					}
				}
			}
		}
	}

	auto_accept = yes
}